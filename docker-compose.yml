version: '3.8'

services:
  traefik:
    image: traefik:2.6
    restart: always
    command:
      - --providers.docker
      - --api.insecure
    networks:
      mealaway:
        aliases:
          - mealaway.test
          - app.mealaway.test
          - api.mealaway.test
    ports:
      - '80:80'
      - '8080:8080'
    security_opt:
      - no-new-privileges=true
    volumes:
      - ./devstack/traefik:/etc/traefik:ro
      - ./devstack/certificates:/etc/certs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  app:
    stop_grace_period: '1s'
    image: node:16-buster
    working_dir: /app
    command:
      - sh
      - -c
      - |
        npm ci
        npm run dev
    networks:
      mealaway:
        aliases:
          - app.mealaway.test
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.app.tls=false'
      - 'traefik.http.routers.app.rule=Host(`app.mealaway.test`)'
      - 'traefik.http.routers.app.entrypoints=http'
      - 'traefik.http.routers.app.service=app'
      - 'traefik.http.services.app.loadbalancer.server.port=5173'
      - 'traefik.docker.network=mealaway'
    volumes:
      - ./app:/app
      - ./devstack/certificates:/etc/certs:ro
    environment:
      VITE_API_URL: http://api.mealaway.test/

  api:
    stop_grace_period: '1s'
    image: node:16-buster
    working_dir: /app
    command:
      - sh
      - -c
      - |
        npm ci
        npm run dev
    networks:
      mealaway:
        aliases:
          - api.mealaway.test
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.tls=false'
      - 'traefik.http.routers.api.rule=Host(`api.mealaway.test`)'
      - 'traefik.http.routers.api.entrypoints=http'
      - 'traefik.http.routers.api.service=api'
      - 'traefik.http.services.api.loadbalancer.server.port=3333'
      - 'traefik.docker.network=mealaway'
    volumes:
      - ./api:/app
    environment:
      PORT: 3333
      HOST: 0.0.0.0
      NODE_ENV: development
      APP_KEY: 5sULHTgtqTOsMfFNQr0_bzga6Mn4waPB
      DRIVE_DISK: local
      DB_CONNECTION: pg
      PG_HOST: postgres
      PG_PORT: 5432
      PG_USER: mealaway
      PG_PASSWORD: mealaway
      PG_DB_NAME: mealaway
      API_URL: http://api.mealaway.test/
      APP_URL: http://app.mealaway.test/
      SESSION_DRIVER: cookie
      ROOT_DOMAIN: mealaway.test
      QUEUE_REDIS_HOST: redis
      QUEUE_REDIS_PORT: 6379
      QUEUE_REDIS_PASSWORD:

  postgres:
    image: postgres:14.5
    restart: unless-stopped
    ports:
      - '5432:5432'
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: mealaway
      POSTGRES_USER: mealaway
      POSTGRES_DB: mealaway
    networks:
      - mealaway
networks:
  mealaway:
    driver: bridge

volumes:
  postgres:
    driver: local

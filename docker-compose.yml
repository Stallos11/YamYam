version: "3.8"

services:
  traefik:
    image: traefik:2.6
    restart: always
    command:
      - --providers.docker
      - --api.insecure
    networks:
      yamyam:
        aliases:
          - app.yamyam.test
          - api.yamyam.test
    ports:
      - "80:80"
      - "8080:8080"
    security_opt:
      - no-new-privileges=true
    volumes:
      - ./devstack/traefik:/etc/traefik:ro
      - ./devstack/certificates:/etc/certs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  dashboard:
    stop_grace_period: "1s"
    image: node:16-buster
    restart: always
    working_dir: /app
    command:
      - sh
      - -c
      - |
        npm ci
        npm run dev
    networks:
      yamyam:
        aliases:
          - dashboard.yamyam.test
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.tls=false"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.yamyam.test`)"
      - "traefik.http.routers.dashboard.entrypoints=http"
      - "traefik.http.routers.dashboard.service=dashboard"
      - "traefik.http.services.dashboard.loadbalancer.server.port=5173"
      - "traefik.docker.network=yamyam"
    volumes:
      - ./dashboard:/app
      - ./devstack/certificates:/etc/certs:ro
    environment:
      VITE_API_URL: http://api.yamyam.test/
      VITE_RECAPTCHA_KEY: 6LcggW0kAAAAAIBPh7SXqoEofNWpSmibvJIfHEoh

  app:
    stop_grace_period: "1s"
    image: node:16-buster
    restart: always
    working_dir: /app
    command:
      - sh
      - -c
      - |
        npm ci
        npm run dev
    networks:
      yamyam:
        aliases:
          - app.yamyam.test
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.tls=false"
      - "traefik.http.routers.app.rule=Host(`app.yamyam.test`)"
      - "traefik.http.routers.app.entrypoints=http"
      - "traefik.http.routers.app.service=app"
      - "traefik.http.services.app.loadbalancer.server.port=5173"
      - "traefik.docker.network=yamyam"
    volumes:
      - ./app:/app
      - ./devstack/certificates:/etc/certs:ro
    environment:
      VITE_API_URL: http://api.yamyam.test/
      VITE_DASHBOARD_URL: http://dashboard.yamyam.test
      VITE_RECAPTCHA_KEY: 6LcggW0kAAAAAIBPh7SXqoEofNWpSmibvJIfHEoh
  api:
    stop_grace_period: "1s"
    restart: always
    image: node:16-buster
    working_dir: /app
    command:
      - sh
      - -c
      - |
        npm ci
        npm run dev
    networks:
      yamyam:
        aliases:
          - api.yamyam.test
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.tls=false"
      - "traefik.http.routers.api.rule=Host(`api.yamyam.test`)"
      - "traefik.http.routers.api.entrypoints=http"
      - "traefik.http.routers.api.service=api"
      - "traefik.http.services.api.loadbalancer.server.port=3333"
      - "traefik.docker.network=yamyam"
    volumes:
      - ./api:/app
    environment:
      PORT: 3333
      HOST: 0.0.0.0
      NODE_ENV: development
      APP_KEY: 51p6hxeWWV0G3qqGpVWyhq8ExI4rz8FZ
      DRIVE_DISK: local
      DB_CONNECTION: pg
      PG_HOST: postgres
      PG_PORT: 5432
      PG_USER: yamyam
      PG_PASSWORD: yamyam
      PG_DB_NAME: yamyam
      API_URL: http://api.yamyam.test/
      APP_URL: http://app.yamyam.test/
      DASHBOARD_URL: http://dashboard.yamyam.test
      SESSION_DRIVER: cookie
      ROOT_DOMAIN: yamyam.test

  postgres:
    image: postgres:14.5
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: yamyam
      POSTGRES_USER: yamyam
      POSTGRES_DB: yamyam
    networks:
      - yamyam
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data
    ports:
      - 9000:9000

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./config/prometheus:/etc/prometheus
      - prom_data:/prometheus
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./config/grafana:/etc/grafana/provisioning/datasources

      
networks:
  yamyam:
    driver: bridge

volumes:
  postgres:
    driver: local
  prom_data:

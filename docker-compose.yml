version: '3.8'

services:
  traefik:
    image: traefik:2.6
    restart: always
    command: 
      - --providers.docker
      - --api.insecure
    networks:
      archi:
        aliases:
          - archi.test
          - app.archi.test
          - api.archi.test
    ports:
      - "80:80"
      - "8080:8080"
    security_opt:
      - no-new-privileges=true
    volumes:
      - ./devstack/traefik:/etc/traefik:ro
      - ./devstack/certificates:/etc/certs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  dashboard:
    stop_grace_period: '1s'
    image: node:16-buster
    working_dir: /app
    command:
      - sh
      - -c
      - |
        npm ci
        npm run dev
    networks:
      archi:
        aliases:
          - app.archi.test
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.tls=false"
      - "traefik.http.routers.dashboard.rule=Host(`app.archi.test`)"
      - "traefik.http.routers.dashboard.entrypoints=http"
      - "traefik.http.routers.dashboard.service=dashboard"
      - "traefik.http.services.dashboard.loadbalancer.server.port=5173"
      - "traefik.docker.network=archi"
    volumes:
      - ./dashboard:/app
      - ./devstack/certificates:/etc/certs:ro
    environment:
      VITE_API_URL: http://api.archi.test/

  api:
    stop_grace_period: '1s'
    image: node:16-buster
    working_dir: /app
    command:
      - sh
      - -c
      - |
        npm ci
        npm run dev
    networks:
      archi:
        aliases:
          - api.archi.test
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.tls=false"
      - "traefik.http.routers.api.rule=Host(`api.archi.test`)"
      - "traefik.http.routers.api.entrypoints=http"
      - "traefik.http.routers.api.service=api"
      - "traefik.http.services.api.loadbalancer.server.port=3333"
      - "traefik.docker.network=archi"
    volumes:
      - ./api:/app
    environment:
      PORT: 3333
      HOST: 0.0.0.0
      NODE_ENV: development
      APP_KEY: 5sULHTgtqTOsMfFNQr0_bzga6Mn4waPB
      DRIVE_DISK: local
      DB_CONNECTION: pg
      PG_HOST: postgres
      PG_PORT: 5432
      PG_USER: archi
      PG_PASSWORD: archi
      PG_DB_NAME: archi
      API_URL: http://api.archi.test/
      APP_URL: http://app.archi.test/
      SESSION_DRIVER: cookie
      ROOT_DOMAIN: archi.test
      QUEUE_REDIS_HOST: redis
      QUEUE_REDIS_PORT: 6379
      QUEUE_REDIS_PASSWORD: 

  postgres:
    image: postgres:14.5
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: archi
      POSTGRES_USER: archi
      POSTGRES_DB: archi
    networks:
      - archi
networks:
  archi:
    driver: bridge

    
volumes:
  postgres:
    driver: local
